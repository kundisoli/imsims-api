version: '3.8'

services:
  # Laravel Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: inventory_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - inventory_network
    depends_on:
      - postgres
      - mongodb
      - redis

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: inventory_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - inventory_network
    depends_on:
      - app

  # PostgreSQL Database (Primary relational data)
  postgres:
    image: postgres:16-alpine
    container_name: inventory_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: inventory_db
      POSTGRES_USER: inventory_user
      POSTGRES_PASSWORD: inventory_password
      PGDATA: /data/postgres
    volumes:
      - postgres_data:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - inventory_network

  # MongoDB (Flexible inventory metadata and logs)
  mongodb:
    image: mongo:7.0
    container_name: inventory_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin_password
      MONGO_INITDB_DATABASE: inventory_logs
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "27017:27017"
    networks:
      - inventory_network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: inventory_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - inventory_network

  # Node.js for frontend development
  node:
    image: node:20-alpine
    container_name: inventory_node
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - inventory_network
    command: sh -c "npm install && npm run dev"
    ports:
      - "5173:5173"

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  inventory_network:
    driver: bridge